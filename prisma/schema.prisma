generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id                  String      @id @default(uuid())
  name                String?
  createdAt           DateTime    @default(now())
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image               String?
  currentCountryId    String?
  currentPrefectureId String?
  deploymentCountryId String?
  cohortId            String?
  twitterUrl          String?
  instagramUrl        String?
  websiteUrl          String?
  bio                 String?
  favoritedBy         Favorite[]  @relation("FavoritedUsers")
  favorites           Favorite[]  @relation("UserFavorites")
  accounts            Account[]
  sessions            Session[]
  @@map("users")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime
  @@unique([identifier, token])
  @@map("verification_tokens")
}
model Favorite {
  id             String @id @default(uuid())
  userId         String
  favoriteUserId String
  favoriteUser   User   @relation("FavoritedUsers", fields: [favoriteUserId], references: [id])
  user           User   @relation("UserFavorites", fields: [userId], references: [id])

  @@unique([userId, favoriteUserId])
}