generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int       @id @default(autoincrement())
  name                 String
  createdAt            DateTime  @default(now())
  image                String?
  currentAddressId     String?
  bio                  String?
  deploymentLocationId String?
  cohortId             String?
  twitterUrl           String?
  instagramUrl         String?
  websiteUrl           String?
  currentAddress       Address?  @relation("CurrentAddress", fields: [currentAddressId], references: [id])
  deploymentLocation   DeploymentLocation? @relation(fields: [deploymentLocationId], references: [id])
  cohort               Cohort?   @relation(fields: [cohortId], references: [id])
  favorites            Favorite[] @relation("UserFavorites")
  favoritedBy          Favorite[] @relation("FavoritedUsers")
}

model Address {
  id                   String   @id @default(uuid())
  countryId            String
  prefectureId         String?
  city                 String?
  otherAddressDetails  String?
  country              Country  @relation(fields: [countryId], references: [id])
  prefecture           Prefecture? @relation(fields: [prefectureId], references: [id])
  users                User[]   @relation("CurrentAddress")
}

enum Continent {
  ASIA
  AFRICA
  EUROPE
  NORTH_AMERICA
  SOUTH_AMERICA
  OCEANIA
  ANTARCTICA
}

model Country {
  id                   String   @id @default(uuid())
  name                 String   @unique
  isDeveloping         Boolean  @default(false)
  continent            Continent
  addresses            Address[]
  deploymentLocations  DeploymentLocation[]
  prefectures          Prefecture[]
}

model Prefecture {
  id                   String   @id @default(uuid())
  name                 String
  countryId            String
  country              Country  @relation(fields: [countryId], references: [id])
  addresses            Address[]
}

model DeploymentLocation {
  id                   String   @id @default(uuid())
  countryId            String
  specificLocation     String
  country              Country  @relation(fields: [countryId], references: [id])
  users                User[]
}

model Cohort {
  id                   String   @id @default(uuid())
  cohortYear           String
  cohortTerm           String
  users                User[]
}

model Favorite {
  id                   String   @id @default(uuid())
  userId               Int
  favoriteUserId       Int
  user                 User     @relation("UserFavorites", fields: [userId], references: [id])
  favoriteUser         User     @relation("FavoritedUsers", fields: [favoriteUserId], references: [id])

  @@unique([userId, favoriteUserId])
}